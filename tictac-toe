import tkinter as tk
from tkinter import messagebox

# Initialize the main window
root = tk.Tk()
root.title("Tic-Tac-Toe")

# Player X starts first
current_player = 'X'

# Create a 3x3 board, initialized with empty strings
board = [['' for _ in range(3)] for _ in range(3)]

# Create a list to hold the buttons
buttons = [[None for _ in range(3)] for _ in range(3)]

# Variable to count the number of clicks
click_count = 0

# Function to check for a winner
def check_winner():
    # Check rows, columns, and diagonals for a winner
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] != '':
            return True
        if board[0][i] == board[1][i] == board[2][i] != '':
            return True
    if board[0][0] == board[1][1] == board[2][2] != '':
        return True
    if board[0][2] == board[1][1] == board[2][0] != '':
        return True
    return False

# Function to reset the board
def reset_board():
    global board, buttons, click_count, current_player
    board = [['' for _ in range(3)] for _ in range(3)]
    for i in range(3):
        for j in range(3):
            buttons[i][j].config(text='')
    click_count = 0
    current_player = 'X'
    status_label.config(text="Player X's turn")

# Function to handle button click
def on_button_click(row, col):
    global click_count, current_player
    if board[row][col] == '' and not check_winner():
        # Mark the board and update the button text
        board[row][col] = current_player
        buttons[row][col].config(text=current_player)
        
        # Increment the click count
        click_count += 1
        
        # Check for winner or draw
        if check_winner():
            messagebox.showinfo("Tic-Tac-Toe", f"Player {current_player} wins!")
            reset_board()
        elif click_count >= 9:
            messagebox.showinfo("Tic-Tac-Toe", "It's a draw!")
            reset_board()
        else:
            # Switch player
            current_player = 'O' if current_player == 'X' else 'X'
            status_label.config(text=f"Player {current_player}'s turn")

# Create buttons and place them in the grid
for i in range(3):
    for j in range(3):
        buttons[i][j] = tk.Button(root, text='', font=('Arial', 40), width=5, height=2,
                                  command=lambda i=i, j=j: on_button_click(i, j))
        buttons[i][j].grid(row=i, column=j)

# Create a label to display the current player's turn
status_label = tk.Label(root, text="Player X's turn", font=('Arial', 14))
status_label.grid(row=3, columnspan=3)

# Start the main loop
root.mainloop()
